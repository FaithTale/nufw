#!/bin/sh
CONFIGFILE1=/etc/default/nuauth20
CONFIGFILE2=/etc/nufw20/nuauth.conf
set -e
. /usr/share/debconf/confmodule

# Gnre un fichier de configuration, s'il n'existe pas.
# Une alternative est de copier dans un fichier
# modle depuis autre part.
if [ ! -e $CONFIGFILE1 ]; then
        echo "# Config file for Nuauth" > $CONFIGFILE1
        echo "# Generated by debconf - Dont edit this by hand" >> $CONFIGFILE1
        echo "# run \"dpkg-reconfigure nuauth20\" instead." >> $CONFIGFILE1
        echo "NUAUTH_START=" >> $CONFIGFILE1
        echo "NUAUTH_VERBOSITY=" >> $CONFIGFILE1
        echo "NUAUTH_USER=" >> $CONFIGFILE1
fi

if [ ! -e $CONFIGFILE2 ]; then
        echo "# Config file for Nuauth" > $CONFIGFILE2
        echo "# Generated by debconf - Dont edit this by hand" >> $CONFIGFILE2
        echo "# run \"dpkg-reconfigure nuauth\" instead." >> $CONFIGFILE2
        echo "nuauth_client_listen_addr=" >> $CONFIGFILE2
        echo "nuauth_nufw_listen_addr=" >> $CONFIGFILE2
        echo "nuauth_gw_packet_port=" >> $CONFIGFILE2
        echo "nuauth_user_packet_port=" >> $CONFIGFILE2
        echo "nufw_gw_addr=" >> $CONFIGFILE2
        echo "nufw_has_conntrack=" >> $CONFIGFILE2
        echo "nufw_has_fixed_timeout=" >> $CONFIGFILE2
        echo "nuauth_debug_level=" >> $CONFIGFILE2
        echo "nuauth_prio=" >> $CONFIGFILE2
        echo "nuauth_prio_to_nok=" >> $CONFIGFILE2
        echo "nuauth_packet_timeout=" >> $CONFIGFILE2
        echo "nuauth_reject_authenticated_drop=" >> $CONFIGFILE2
        echo "nuauth_hello_authentication=" >> $CONFIGFILE2
        echo "nuauth_number_usercheckers=" >> $CONFIGFILE2
        echo "nuauth_number_aclcheckers=" >> $CONFIGFILE2
        echo "nuauth_number_session_loggers=" >> $CONFIGFILE2
        echo "nuauth_user_check_module=" >> $CONFIGFILE2
        echo "nuauth_acl_check_module=" >> $CONFIGFILE2
        echo "nuauth_tls_key_passwd=" >> $CONFIGFILE2
        echo "nuauth_tls_key=" >> $CONFIGFILE2
        echo "nuauth_tls_key_passwd=" >> $CONFIGFILE2
        echo "nuauth_tls_cert=" >> $CONFIGFILE2
        echo "nuauth_log_users=" >> $CONFIGFILE2
        echo "nuauth_log_users_sync=" >> $CONFIGFILE2
        echo "nuauth_log_users_strict=" >> $CONFIGFILE2
        echo "nuauth_user_logs_module=" >> $CONFIGFILE2
        echo "nuauth_user_session_logs_module=" >> $CONFIGFILE2
        echo "plaintext_aclfile=" >> $CONFIGFILE2
        echo "plaintext_userfile=" >> $CONFIGFILE2
        echo "ldap_server_addr=" >> $CONFIGFILE2
        echo "ldap_server_port=" >> $CONFIGFILE2
        echo "ldap_bind_dn=" >> $CONFIGFILE2
        echo "ldap_bind_password=" >> $CONFIGFILE2
        echo "ldap_request_timeout=" >> $CONFIGFILE2
        echo "ldap_basedn=" >> $CONFIGFILE2
        echo "ldap_acls_base_dn=" >> $CONFIGFILE2
        echo "ldap_users_base_dn=" >> $CONFIGFILE2
        echo "ldap_acls_timerange_base_dn=" >> $CONFIGFILE2
        echo "mysql_server_addr=" >> $CONFIGFILE2
        echo "mysql_server_port=" >> $CONFIGFILE2
        echo "mysql_db_name=" >> $CONFIGFILE2
        echo "mysql_table_name=" >> $CONFIGFILE2
        echo "mysql_user=" >> $CONFIGFILE2
        echo "mysql_passwd=" >> $CONFIGFILE2
        echo "mysql_request_timeout=" >> $CONFIGFILE2
        echo "mysql_users_table_name=" >> $CONFIGFILE2
        echo "mysql_use_ssl=" >> $CONFIGFILE2
        echo "mysql_ssl_keyfile=" >> $CONFIGFILE2
        echo "mysql_ssl_certfile=" >> $CONFIGFILE2
        echo "mysql_ssl_ca=" >> $CONFIGFILE2
        echo "mysql_ssl_capath=" >> $CONFIGFILE2
        echo "mysql_ssl_cipher=" >> $CONFIGFILE2
        echo "pgsql_server_addr=" >> $CONFIGFILE2
        echo "pgsql_server_port=" >> $CONFIGFILE2
        echo "pgsql_db_name=" >> $CONFIGFILE2
        echo "pgsql_table_name=" >> $CONFIGFILE2
        echo "pgsql_user=" >> $CONFIGFILE2
        echo "pgsql_passwd=" >> $CONFIGFILE2
        echo "pgsql_request_timeout=" >> $CONFIGFILE2
        echo "pgsql_users_table_name=" >> $CONFIGFILE2
        echo "pgsql_ssl=" >> $CONFIGFILE2
        echo "pgsql_users_table_name=" >> $CONFIGFILE2
        echo "nuauth_reject_after_timeout=" >> $CONFIGFILE2
        echo "system_convert_username_to_uppercase=" >> $CONFIGFILE2
fi
# Substitue les valeurs par celles dans la base
# de donnes de debconf. Il y a ici quelques
# optimisations possibles simples. Le cp avant
# le sed permet de s'assurer que l'on ne dtruise
# pas le systme des droits du fichier config.
db_get nuauth20/start_at_boot
NUAUTH_START="$RET"
db_get nuauth20/verbosity
NUAUTH_VERBOSITY="$RET"
db_get nuauth20/user
NUAUTH_USER="$RET"

cp -a -f $CONFIGFILE1 $CONFIGFILE1.tmp

sed -e "s/^ *NUAUTH_START=.*/NUAUTH_START=\"$NUAUTH_START\"/" \
 -e "s/^ *NUAUTH_VERBOSITY=.*/NUAUTH_VERBOSITY=\"$NUAUTH_VERBOSITY\"/" \
 -e "s/^ *NUAUTH_USER=.*/NUAUTH_USER=\"$NUAUTH_USER\"/" \
  < $CONFIGFILE1 > $CONFIGFILE1.tmp
mv -f $CONFIGFILE1.tmp $CONFIGFILE1

db_get nuauth20/client_listen_addr
nuauth_client_listen_addr="$RET"
db_get nuauth20/nufw_listen_addr
nuauth_nufw_listen_addr="$RET"
db_get nuauth20/gw_packet_port
nuauth_gw_packet_port="$RET"
db_get nuauth20/user_packet_port
nuauth_user_packet_port="$RET"
db_get nuauth20/nufw_gw_address
nufw_gw_addr="$RET"
db_get nuauth20/prio
nuauth_prio="$RET"
db_get nuauth20/prio_to_nok
nuauth_prio_to_nok="$RET"
db_get nuauth20/packet_timeout
nuauth_packet_timeout="$RET"
db_get nuauth20/number_usercheckers
nuauth_number_usercheckers="$RET"
db_get nuauth20/number_aclcheckers
nuauth_number_aclcheckers="$RET"
db_get nuauth20/log_users
nuauth_log_users="$RET"
db_get nuauth20/log_users_sync
nuauth_log_users_sync="$RET"
db_get nuauth20/log_users_strict
nuauth_log_users_strict="$RET"
db_get nuauth20/user_logs_module
nuauth_user_logs_module="$RET"
db_get nuauth20/user_check_module
nuauth_user_check_module="$RET"
db_get nuauth20/plaintext_aclfile
plaintext_aclfile="$RET"
db_get nuauth20/plaintext_userfile
plaintext_userfile="$RET"
db_get nuauth20/ldap_server_addr
ldap_server_addr="$RET"
db_get nuauth20/ldap_server_port
ldap_server_port="$RET"
db_get nuauth20/ldap_bind_dn
ldap_bind_dn="$RET"
db_get nuauth20/ldap_bind_password
ldap_bind_password="$RET"
db_get nuauth20/ldap_request_timeout
ldap_request_timeout="$RET"
db_get nuauth20/ldap_basedn
ldap_basedn="$RET"
db_get nuauth20/ldap_users_base_dn
ldap_users_base_dn="$RET"
db_get nuauth20/acl_check_module
nuauth_acl_check_module="$RET"
db_get nuauth20/tls_key
nuauth_tls_key="$RET"
db_get nuauth20/tls_key_passwd
nuauth_tls_key_passwd="$RET"
db_get nuauth20/tls_cert
nuauth_tls_cert="$RET"
db_get nuauth20/ldap_acls_base_dn
ldap_acls_base_dn="$RET"
db_get nuauth20/mysql_server_addr
mysql_server_addr="$RET"
db_get nuauth20/mysql_server_port
mysql_server_port="$RET"
db_get nuauth20/mysql_db_name
mysql_db_name="$RET"
db_get nuauth20/mysql_table_name
mysql_table_name="$RET"
db_get nuauth20/mysql_user
mysql_user="$RET"
db_get nuauth20/mysql_passwd
mysql_passwd="$RET"
db_get nuauth20/mysql_request_timeout
mysql_request_timeout="$RET"
db_get nuauth20/mysql_use_ssl
mysql_use_ssl="$RET"
db_get nuauth20/mysql_ssl_keyfile
mysql_ssl_keyfile="$RET"
db_get nuauth20/mysql_ssl_certfile
mysql_ssl_certfile="$RET"
db_get nuauth20/mysql_ssl_ca
mysql_ssl_ca="$RET"
db_get nuauth20/mysql_ssl_capath
mysql_ssl_capath="$RET"
db_get nuauth20/mysql_ssl_cipher
mysql_ssl_cipher="$RET"
db_get nuauth20/pgsql_server_addr

pgsql_server_addr="$RET"
db_get nuauth20/pgsql_server_port
pgsql_server_port="$RET"
db_get nuauth20/pgsql_db_name
pgsql_db_name="$RET"
db_get nuauth20/pgsql_table_name
pgsql_table_name="$RET"
db_get nuauth20/pgsql_user
pgsql_user="$RET"
db_get nuauth20/pgsql_passwd
pgsql_passwd="$RET"
db_get nuauth20/pgsql_request_timeout
pgsql_request_timeout="$RET"
db_get nuauth20/pgsql_ssl
pgsql_ssl="$RET"
db_get nuauth20/pgsql_users_table_name
pgsql_users_table_name="$RET"
db_get nuauth20/nuauth_reject_after_timeout
nuauth_reject_after_timeout="$RET"

cp -a -f $CONFIGFILE2 $CONFIGFILE2.tmp

sed -e "s/^ *nuauth_client_listen_addr=.*/nuauth_client_listen_addr=\"$nuauth_client_listen_addr\"/" \
 -e "s/^ *nuauth_nufw_listen_addr=.*/nuauth_nufw_listen_addr=\"$nuauth_nufw_listen_addr\"/" \
 -e "s/^ *nuauth_gw_packet_port=.*/nuauth_gw_packet_port=\"$nuauth_gw_packet_port\"/" \
 -e "s/^ *nuauth_user_packet_port=.*/nuauth_user_packet_port=\"$nuauth_user_packet_port\"/" \
 -e "s/^ *nufw_gw_addr=.*/nufw_gw_addr=\"$nufw_gw_addr\"/" \
 -e "s/^ *nuauth_prio=.*/nuauth_prio=$nuauth_prio/" \
 -e "s/^ *nuauth_prio_to_nok=.*/nuauth_prio_to_nok=$nuauth_prio_to_nok/" \
 -e "s/^ *nuauth_packet_timeout=.*/nuauth_packet_timeout=$nuauth_packet_timeout/" \
 -e "s/^ *nuauth_number_usercheckers=.*/nuauth_number_usercheckers=$nuauth_number_usercheckers/" \
 -e "s/^ *nuauth_number_aclcheckers=.*/nuauth_number_aclcheckers=$nuauth_number_aclcheckers/" \
 -e "s/^ *nuauth_user_check_module=.*/nuauth_user_check_module=\"$nuauth_user_check_module\"/" \
 -e "s/^ *nuauth_acl_check_module=.*/nuauth_acl_check_module=\"$nuauth_acl_check_module\"/" \
 -e "sµ^ *nuauth_tls_key=.*µnuauth_tls_key=\"$nuauth_tls_key\"µ" \
 -e "s/^ *nuauth_tls_key_passwd=.*/nuauth_tls_key_passwd=\"$nuauth_tls_key_passwd\"/" \
 -e "sµ^ *nuauth_tls_cert=.*µnuauth_tls_cert=\"$nuauth_tls_cert\"µ" \
 -e "s/^ *nuauth_log_users=.*/nuauth_log_users=$nuauth_log_users/" \
 -e "s/^ *nuauth_log_users_sync=.*/nuauth_log_users_sync=$nuauth_log_users_sync/" \
 -e "s/^ *nuauth_log_users_strict=.*/nuauth_log_users_strict=$nuauth_log_users_strict/" \
 -e "s/^ *nuauth_user_logs_module=.*/nuauth_user_logs_module=\"$nuauth_user_logs_module\"/" \
 -e "sµ^ *plaintext_userfile=.*µplaintext_userfile=\"$plaintext_userfile\"µ" \
 -e "sµ^ *plaintext_aclfile=.*µplaintext_aclfile=\"$plaintext_aclfile\"µ" \
 -e "s/^ *ldap_server_addr=.*/ldap_server_addr=\"$ldap_server_addr\"/" \
 -e "s/^ *ldap_server_port=.*/ldap_server_port=$ldap_server_port/" \
 -e "s/^ *ldap_bind_dn=.*/ldap_bind_dn=\"$ldap_bind_dn\"/" \
 -e "s/^ *ldap_bind_password=.*/ldap_bind_password=\"$ldap_bind_password\"/" \
 -e "s/^ *ldap_request_timeout=.*/ldap_request_timeout=$ldap_request_timeout/" \
 -e "s/^ *ldap_basedn=.*/ldap_basedn=\"$ldap_basedn\"/" \
 -e "s/^ *ldap_acls_base_dn=.*/ldap_acls_base_dn=\"$ldap_acls_base_dn\"/" \
 -e "s/^ *ldap_users_base_dn=.*/ldap_users_base_dn=\"$ldap_users_base_dn\"/" \
 -e "s/^ *mysql_server_addr=.*/mysql_server_addr=\"$mysql_server_addr\"/" \
 -e "s/^ *mysql_server_port=.*/mysql_server_port=$mysql_server_port/" \
 -e "s/^ *mysql_db_name=.*/mysql_db_name=\"$mysql_db_name\"/" \
 -e "s/^ *mysql_table_name=.*/mysql_table_name=\"$mysql_table_name\"/" \
 -e "s/^ *mysql_user=.*/mysql_user=\"$mysql_user\"/" \
 -e "s/^ *mysql_passwd=.*/mysql_passwd=\"$mysql_passwd\"/" \
 -e "s/^ *mysql_request_timeout=.*/mysql_request_timeout=$mysql_request_timeout/" \
 -e "s/^ *mysql_use_ssl=.*/mysql_use_ssl=$mysql_use_ssl/" \
 -e "sµ^ *mysql_ssl_keyfile=.*µmysql_ssl_keyfile=\"$mysql_ssl_keyfile\"µ" \
 -e "sµ^ *mysql_ssl_certfile=.*µmysql_ssl_certfile=\"$mysql_ssl_certfile\"µ" \
 -e "sµ^ *mysql_ssl_ca=.*µmysql_ssl_ca=\"$mysql_ssl_ca\"µ" \
 -e "sµ^ *mysql_ssl_capath=.*µmysql_ssl_capath=\"$mysql_ssl_capath\"µ" \
 -e "s/^ *mysql_ssl_cipher=.*/mysql_ssl_cipher=\"$mysql_ssl_cipher\"/" \
 -e "s/^ *pgsql_server_addr=.*/pgsql_server_addr=\"$pgsql_server_addr\"/" \
 -e "s/^ *pgsql_server_port=.*/pgsql_server_port=$pgsql_server_port/" \
 -e "s/^ *pgsql_db_name=.*/pgsql_db_name=\"$pgsql_db_name\"/" \
 -e "s/^ *pgsql_table_name=.*/pgsql_table_name=\"$pgsql_table_name\"/" \
 -e "s/^ *pgsql_user=.*/pgsql_user=\"$pgsql_user\"/" \
 -e "s/^ *pgsql_passwd=.*/pgsql_passwd=\"$pgsql_passwd\"/" \
 -e "s/^ *pgsql_request_timeout=.*/pgsql_request_timeout=$pgsql_request_timeout/" \
 -e "s/^ *pgsql_ssl=.*/pgsql_ssl=$pgsql_ssl/" \
 -e "s/^ *pgsql_users_table_name=.*/pgsql_users_table_name=$pgsql_users_table_name/" \
 -e "s/^ *nuauth_reject_after_timeout=.*/nuauth_reject_after_timeout=$nuauth_reject_after_timeout/" \
  < $CONFIGFILE2 > $CONFIGFILE2.tmp
mv -f $CONFIGFILE2.tmp $CONFIGFILE2

if grep -q -e "^$NUAUTH_USER:" /etc/passwd
then
  chown $NUAUTH_USER /var/run/nuauth/
else
  echo "FATAL : User \"$NUAUTH_USER\" does not exist, but is supposed to run nuath"
  exit -1
fi


#generation du certificat ssl
if [ -x /usr/bin/openssl ]; then
  if [ ! -e $nuauth_tls_key ]; then
    if [ ! -e $nuauth_tls_cert ]; then

      db_capb backup
      db_settitle make-ssl-cert/title
      
      templates="countryname statename localityname organisationname ouname hostname email"
      
      for i in $templates; do
          RET=""
          while [ "x$RET" = "x" ]; do
          	db_fset make-ssl-cert/$i seen false
      	db_input high make-ssl-cert/$i || true
      	db_go
      	db_get make-ssl-cert/$i
          done
      done
      
      db_get make-ssl-cert/countryname
      CountryName="$RET"
      db_fset make-ssl-cert/countryname seen false
      
      db_get make-ssl-cert/statename
      StateName="$RET"
      db_fset make-ssl-cert/statename seen false
      
      db_get make-ssl-cert/localityname
      LocalityName="$RET"
      db_fset make-ssl-cert/localityname seen false
      
      db_get make-ssl-cert/organisationname
      OrganisationName="$RET"
      db_fset make-ssl-cert/organisationname seen false
      
      db_get make-ssl-cert/ouname
      OUName="$RET"
      db_fset make-ssl-cert/ouname seen false
      
      db_get make-ssl-cert/hostname
      HostName="$RET"
      db_fset make-ssl-cert/hostname seen false
      
      db_get make-ssl-cert/email
      Email="$RET"
      db_fset make-ssl-cert/email seen false
      
      # # should be a less common char
      # problem is that openssl virtually accepts everything and we need to
      # sacrifice one char.
      
      TMPFILE=`mktemp` || exit 1
      
      sed -e s#@CountryName@#"$CountryName"# \
          -e s#@StateName@#"$StateName"# \
          -e s#@LocalityName@#"$LocalityName"# \
          -e s#@OrganisationName@#"$OrganisationName"# \
          -e s#@OUName@#"$OUName"# \
          -e s#@HostName@#"$HostName"# \
          -e s#@Email@#"$Email"# \
          /usr/share/ssl-cert/ssleay.cnf > $TMPFILE
      
      export RANDFILE=/dev/random
      /usr/bin/openssl req -config $TMPFILE -new -x509 -nodes -keyout $nuauth_tls_key -pubkey -out $nuauth_tls_cert -days 1095 || /bin/true
      chmod 640 $nuauth_tls_key
      chgrp $NUAUTH_USER $nuauth_tls_key
      rm -f $TMPFILE
    fi
  fi
fi

db_stop




#DEBHELPER#

exit 0
